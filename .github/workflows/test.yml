name: Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request') ||
      (github.actor != 'github-actions[bot]' &&
       !contains(github.event.head_commit.message, '[skip ci]') &&
       !contains(github.event.head_commit.message, '[ci skip]') &&
       !contains(github.event.head_commit.message, '[no ci]') &&
       !contains(github.event.head_commit.message, 'chore(release)'))

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.5
          poetry install --no-root

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report -m
          poetry run coverage xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
