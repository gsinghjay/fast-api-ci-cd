name: Test

on:
  workflow_call: {}  # Allow this workflow to be called by other workflows
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:
  setup:
    name: Setup Environment
    uses: ./.github/workflows/setup-python.yml
    with:
      python-version: "3.11"

  test:
    name: Run Tests
    needs: [setup]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request') ||
      (github.actor != 'github-actions[bot]' &&
       !contains(github.event.head_commit.message, '[skip ci]') &&
       !contains(github.event.head_commit.message, 'chore(release)'))

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install poetry==1.8.5
          poetry config virtualenvs.in-project true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-python-3.11-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-3.11-
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: poetry install

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report -m
