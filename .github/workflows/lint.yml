name: Lint

on:
  workflow_call:
    inputs:
      venv-name:
        required: true
        type: string
        description: "Name of the virtual environment artifact"
      python-version:
        required: false
        type: string
        default: "3.11"
        description: "Python version to use"
    secrets:
      token:
        required: true
        description: "GitHub token for authentication"

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Download virtual environment
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.venv-name }}
          path: artifact
          merge-multiple: true

      - name: Debug downloaded artifact
        run: |
          echo "Artifact directory contents:"
          ls -la artifact/
          echo "Current directory contents:"
          ls -la

      - name: Restore virtual environment
        run: |
          if [ ! -f "artifact/venv.tar.gz" ]; then
            echo "ERROR: venv.tar.gz not found in artifact"
            exit 1
          fi
          tar xzf artifact/venv.tar.gz
          cp artifact/poetry.lock .
          cp artifact/pyproject.toml .
          chmod -R +x .venv/bin/

      - name: Run Black
        run: .venv/bin/black --check .

      - name: Run Flake8
        run: .venv/bin/flake8 .

      - name: Run MyPy
        run: .venv/bin/mypy .

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
