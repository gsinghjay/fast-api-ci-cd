name: Lint

on:
  workflow_call:
    inputs:
      venv-name:
        required: true
        type: string
        description: "Name of the virtual environment artifact"
      python-version:
        required: false
        type: string
        default: "3.11"
        description: "Python version to use"
    secrets:
      GITHUB_TOKEN:
        required: true
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    # Skip on release commits
    if: |
      (github.event_name == 'pull_request') ||
      (github.actor != 'github-actions[bot]' &&
       !contains(github.event.head_commit.message, '[skip ci]') &&
       !contains(github.event.head_commit.message, '[ci skip]') &&
       !contains(github.event.head_commit.message, '[no ci]') &&
       !contains(github.event.head_commit.message, 'chore(release)'))

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Create virtual environment
        run: python -m venv .venv

      - name: Download virtual environment
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.venv-name }}
          path: .

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run Black
        run: |
          source .venv/bin/activate
          black --check .

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: commitlint.config.js
          failOnWarnings: true
          token: ${{ secrets.GITHUB_TOKEN }}
