name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_call:
    secrets:
      token:
        required: true
        description: "GitHub token for authentication"
    outputs:
      venv-name:
        description: "Name of the virtual environment artifact"
        value: ${{ jobs.setup.outputs.venv-name }}
  workflow_dispatch:

jobs:
  setup:
    name: Setup Environment
    uses: ./.github/workflows/setup-python.yml
    with:
      python-version: "3.11"

  lint:
    name: Lint Check
    needs: [setup]
    uses: ./.github/workflows/lint.yml
    with:
      venv-name: ${{ needs.setup.outputs.venv-name }}
      python-version: "3.11"
    permissions:
      contents: read
      pull-requests: read
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run Tests
    needs: [setup]
    uses: ./.github/workflows/test.yml
    with:
      venv-name: ${{ needs.setup.outputs.venv-name }}
      python-version: "3.11"
    permissions:
      contents: read
      checks: write

  release:
    name: Create Release
    needs: [lint, test]
    if: |
      github.ref == 'refs/heads/main' &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, 'chore(release)') &&
      github.actor != 'github-actions[bot]' &&
      github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Force correct release branch
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.12.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Display Release Information
        if: steps.release.outputs.released == 'true'
        run: |
          echo "Version released: ${{ steps.release.outputs.version }}"
          echo "Tag created: ${{ steps.release.outputs.tag }}"

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.8.9
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
