name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Create a prerelease version'
        type: boolean
        required: false
        default: false
      prerelease_token:
        description: 'Token for prerelease version (e.g., alpha, beta)'
        type: string
        required: false
      force:
        description: 'Force version bump (patch, minor, major)'
        type: choice
        options:
          - none
          - patch
          - minor
          - major
        required: false
        default: 'none'

permissions:
  contents: write
  id-token: write

jobs:
  lint:
    name: Lint Check
    uses: ./.github/workflows/lint.yml
    permissions:
      contents: read
      pull-requests: read

  test:
    name: Run Tests
    needs: [lint]
    uses: ./.github/workflows/test.yml
    permissions:
      contents: read
      checks: write

  setup:
    name: Setup Environment
    needs: [test]
    uses: ./.github/workflows/setup-python.yml
    with:
      python-version: "3.11"

  release:
    name: Create Release
    needs: [setup]
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' &&
      github.actor != 'github-actions[bot]' &&
      github.actor != 'semantic-release' &&
      !contains(github.event.head_commit.message, '[skip ci]')
    concurrency:
      group: release
      cancel-in-progress: true

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install poetry==1.8.5
          poetry config virtualenvs.in-project true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-python-3.11-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-3.11-
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: poetry install

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.15.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VIRTUAL_ENV: ${{ env.VIRTUAL_ENV }}
          PATH: ${{ env.PATH }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: .
          root_options: "-vv"
          prerelease: ${{ inputs.prerelease || false }}
          prerelease_token: ${{ inputs.prerelease_token }}
          force: ${{ inputs.force != 'none' && inputs.force || '' }}
          changelog: true
          commit: true
          push: true
          build: true
          tag: true
          vcs_release: true

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.15.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
