name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Create a prerelease version'
        type: boolean
        required: false
        default: false
      prerelease_token:
        description: 'Token for prerelease version (e.g., alpha, beta)'
        type: string
        required: false
      force:
        description: 'Force version bump (patch, minor, major)'
        type: choice
        options:
          - none
          - patch
          - minor
          - major
        required: false
        default: 'none'

permissions:
  contents: write
  id-token: write

jobs:
  # Call the lint workflow first
  lint:
    name: Lint Check
    uses: ./.github/workflows/lint.yml
    permissions:
      contents: read
      pull-requests: read

  # Call the test workflow next
  test:
    name: Run Tests
    needs: [lint]
    uses: ./.github/workflows/test.yml
    permissions:
      contents: read
      checks: write

  # Finally run the release job
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # Only run release on main branch and when not triggered by automated commits
    if: |
      github.ref == 'refs/heads/main' &&
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.head_commit.message, 'chore(release)') &&
      !contains(github.event.head_commit.message, '[skip ci]')
    needs: [lint, test]
    concurrency: release

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ github.sha }}

      - name: Force correct release branch
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}

      - name: Setup Python and Dependencies
        run: |
          pip install python-semantic-release==9.15.0
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Generate Changelog
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Generate changelog regardless of release
          semantic-release changelog

          # Commit changelog if changed
          if [[ -n $(git status --porcelain CHANGELOG.md) ]]; then
            git pull origin ${{ github.ref_name }} --rebase
            git add CHANGELOG.md
            git commit -m "docs: update CHANGELOG.md [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
          fi

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.15.0
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          prerelease: ${{ inputs.prerelease || false }}
          prerelease_token: ${{ inputs.prerelease_token }}
          force: ${{ inputs.force != 'none' && inputs.force || '' }}
          git_committer_name: "github-actions[bot]"
          git_committer_email: "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.15.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
