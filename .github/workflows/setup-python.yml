name: Setup Python Environment

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: "3.11"
        description: "Python version to use"
    outputs:
      venv-name:
        description: "Name of the virtual environment artifact"
        value: ${{ jobs.setup.outputs.venv-name }}

jobs:
  setup:
    name: Setup Python
    runs-on: ubuntu-latest
    outputs:
      venv-name: venv-${{ github.run_id }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"

      - name: Install Poetry
        run: |
          pip install poetry==1.8.5
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install

      - name: Debug before copy
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Virtual environment contents:"
          ls -la .venv || echo "No .venv directory"
          echo "Python executable path:"
          which python
          echo "Poetry env info:"
          poetry env info

      - name: Create artifact directory
        run: |
          mkdir -p artifact
          cp poetry.lock artifact/
          cp pyproject.toml artifact/
          if [ ! -d ".venv" ]; then
            echo "ERROR: .venv directory not found"
            exit 1
          fi
          tar czf artifact/venv.tar.gz .venv/
          echo "Artifact directory contents:"
          ls -la artifact/
          echo "Artifact sizes:"
          du -sh artifact/*

      - name: Upload virtual environment
        uses: actions/upload-artifact@v4
        with:
          name: venv-${{ github.run_id }}
          path: artifact/
          if-no-files-found: error
